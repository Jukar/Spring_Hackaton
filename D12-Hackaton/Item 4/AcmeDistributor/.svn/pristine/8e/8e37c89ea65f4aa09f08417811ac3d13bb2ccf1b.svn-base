package controllers.customer;

import java.util.Collection;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.util.Assert;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import security.LoginService;
import services.CustomerService;
import services.InvoiceService;
import services.ShoppingCartService;
import controllers.AbstractController;
import domain.Customer;
import domain.Invoice;
import domain.Message;
import domain.ShoppingCart;
import forms.InvoiceForm;

@Controller
@RequestMapping("/invoice/customer")
public class InvoiceCustomerController extends AbstractController{
	@Autowired
	private InvoiceService invoiceService;
	@Autowired
	private ShoppingCartService shoppingCartService;
	@Autowired
	private CustomerService customerService;
	
	//Listing------------------------
	@RequestMapping("/myInvoices")
	public ModelAndView list() {
		ModelAndView result;
		Collection<Invoice> invoices=invoiceService.findByCustomer();			
		String requestURI="invoice/customer/list.do";
			
		result = new ModelAndView("invoice/customer/myInvoices");
		result.addObject("invoices",invoices);
		result.addObject("requestURI",requestURI);
		result.addObject("isProducer", false);
		return result;
	}	
	
	
	//Creation----------------------
	@RequestMapping(value="/create",method=RequestMethod.GET)
	public ModelAndView create(){
		ModelAndView result;
		ShoppingCart shoppingCart=shoppingCartService.findByShoppingCustomer();
		
		
		InvoiceForm invoiceForm = invoiceService.construct(shoppingCart);
		Assert.notNull(invoiceForm);
		
		result = createEditModelAndView(invoiceForm);
		
		return result;
	}

	@RequestMapping(value="/create",method=RequestMethod.POST,params="save")		
	public ModelAndView save(@Valid InvoiceForm invoiceForm, BindingResult binding){
		ModelAndView result;
		
		if(binding.hasErrors()){
			result=createEditModelAndView(invoiceForm);
		} else{
			try{
				Invoice invoice=invoiceService.create(invoiceForm.getShoppingCart());
				invoiceService.save(invoice);
				result=new ModelAndView("redirect:myInvoices.do");
			} catch(Throwable oops){
				result=createEditModelAndView(invoiceForm,"invoice.commit.error");
			}
		}
		return result;
	}
	
	
	//Ancillary methods
	protected ModelAndView createEditModelAndView(InvoiceForm invoiceForm){
		ModelAndView result;
		result=createEditModelAndView(invoiceForm,null);		
		return result;
	}
	
	protected ModelAndView createEditModelAndView(InvoiceForm invoiceForm, String message){
		ModelAndView result;
		String requestURI="invoice/customer/create.do";
		result=new ModelAndView("invoice/customer/edit");
		result.addObject("requestURI",requestURI);
		result.addObject("invoiceForm", invoiceForm);
		result.addObject("invoiceLines", invoiceForm.getShoppingCart().getLines());
		return result;
	}
}
